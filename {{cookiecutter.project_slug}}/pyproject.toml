[project]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_description }}"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
dependencies = [] # Add your script dependencies here
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
license = { text = "MIT" }

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.1",
    "bandit>=1.8.6",
    "mypy>=1.11.1",
    {% if cookiecutter.include_mkdocs_docs.lower() == 'yes' %}
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.6.20",
    {% endif %}
    {% if cookiecutter.developing_on_windows.lower() == 'yes' %}
    "invoke>=2.2.0",
    {% endif %}
]

[tool.uv]
# Configuration for uv, if needed
# For now, we'll keep it simple

[tool.ruff]
line-length = 88
target-version = "py{{ cookiecutter.python_version.replace('.','') }}"

[tool.ruff.lint]
select = ["E", "F", "B", "I"] # Common rules for errors, flakes, bugs, and imports
# Linter rules to ignore, e.g., if you want to skip docstring checks
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]

[tool.pytest.ini_options]
# Tell pytest where to find the source code
pythonpath = ["./src"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html --cov-fail-under=90"

[tool.bandit]
exclude = ["tests"]

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true  # Enforces type hints on all functions